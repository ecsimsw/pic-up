apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-album
  namespace: picup
spec:
  selector:
    matchLabels:
      app: server-album
  replicas: 2
  template:
    metadata:
      labels:
        app: server-album
      annotations:
        vault.hashicorp.com/role: internal-app
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-picup: picup/common
        vault.hashicorp.com/agent-inject-template-picup: |
          {{- with secret "picup/common" -}}
          {{- range $k, $v := .Data }}
          export {{ $k }}={{ $v }}
          {{end}}{{end}}
    spec:
      containers:
        - name: server-album
          image: ghcr.io/ecsimsw/picup/server-album:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "500Mi"
            limits:
              memory: "500Mi"
          volumeMounts:
            - name: picup-data
              mountPath: /album-logs  # WRITE logs
            - name: picup-data
              mountPath: /ext-data    # READ private_key.pem
          ports:
            - containerPort: 8084
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            failureThreshold: 30
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            failureThreshold: 2
            periodSeconds: 100
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            failureThreshold: 2
            periodSeconds: 100
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]    # Ensure that the IpTable is updated before kubelet kill container.
      volumes:
        - name: picup-data
          persistentVolumeClaim:
            claimName: server-album-pvc