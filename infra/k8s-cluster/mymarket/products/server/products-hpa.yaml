apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: products-server-hpa
  namespace: mymarket
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: products-server
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: memory                       # Percentage of requested memory
        target:
          type: Utilization
          averageUtilization: 80           # HPA controller scales the target such that the average utilization of the cpu in the application container of all the pods is 80%.
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0        # The number of seconds for which past recommendations should be considered while scaling up or down
      policies:
      - type: Pods
        value: 4
        periodSeconds: 15
      - type: Percent
        value: 100
        periodSeconds: 15                   # There are 2 policies where 4 pods or a 100% of the currently running replicas may at most be added every 15 seconds till the HPA reaches its steady state.
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 5
        periodSeconds: 60                   # To ensure that no more than 5 Pods are removed per minute, you can add a second scale-down policy with a fixed size of 5
      - type: Percent
        value: 100                          # The scaling target can be scaled down to the minimum allowed replicas.
        periodSeconds: 30
      selectPolicy: Min                     # Setting selectPolicy to Min means that the autoscaler chooses the policy that affects the smallest number of Pods:
